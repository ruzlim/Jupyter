CREATE OR REPLACE PROCEDURE GEOSPCAPPO.PRC_STG_KPI_NEWCO_APRU (DATA_AS_OF_DAY  VARCHAR2) AS 

/* ================================================================= */
/* Created date   : 03-OCT-2022                                      */
/* Created by     : Krawin P.                                        */
/* Objective      : Support prc_stg_kpi_newco_total                  */
/* ================================================================= */
/* Modified date  : 12-OCT-2023                                      */
/* Modified by    : Krawin P.                                        */
/* Objective      : Add KPI : TB7R000105 :ARPU TOL- Connected Subs   */
/* ================================================================= */
/* 2024-05-15     : New KPI B7R000101 & B7R000102                    */
/* 2024-05-24     : New KPI B7R000101GEO & B7R000102GEO              */
/* 2024-05-25     : New KPI TB7R000101GEO & TB7R000102GEO            */
/* 2024-06-05     : B7R000101GEO >>> B7R010101 & TB7R000101GEO >>> TB7R010101  */
/* 2024-06-05     : New KPI B2R010600                                          */
/* 2024-06-05     : New KPI B1R001200GEO                                       */
/* 2024-06-05     : New KPI TB1R001200GEO & TB3R000800GEO & TB4R001600GEO      */
/* 2024-07-10     : Re-Code                                                    */
/* 2024-07-18     : Edit KPI B7R010101 & DB7R010101 & TB7R010101               */
/* 2024-10-21     : Change NUMERATOR from MTD to rolling                       */
/* 2025-04-24     : Edit Revenue 30 Day & Change "Prepaid Usage Subs" to "Prepaid Active Caller 30D Rolling"	*/
/* 2025-05-23     : Edit 4 KPIs Postpaid B2C ARPU & TOL ARPU Change "Active Subs" to "Reported SubBase"
					Remove 3 KPIs Postpaid ARPU																	*/


--V_SNAP_TM_KEY      NUMBER := TO_NUMBER(DATA_AS_OF_DAY) ;
--V_TM_YEAR          NUMBER := TO_NUMBER(SUBSTR(TRIM(DATA_AS_OF_DAY),1,4)) ;
--V_TM_MONTH         NUMBER := TO_NUMBER(SUBSTR(TRIM(DATA_AS_OF_DAY),1,6)) ;
--V_TM_DATE          NUMBER := TO_NUMBER(SUBSTR(TRIM(DATA_AS_OF_DAY),7,2)) ;

--V_TM_MONTH_CUR     NUMBER := TO_NUMBER(SUBSTR(TRIM(DATA_AS_OF_DAY),1,6)) ;
--V_TM_MONTH_PREV    NUMBER := TO_NUMBER(SUBSTR(TRIM(DATA_AS_OF_DAY),1,6)) ;
V_SNAP_TM_KEY NUMBER := TO_NUMBER(20231224) ;

BEGIN

--ACTUAL
EXECUTE IMMEDIATE 'TRUNCATE TABLE GEOSPCAPPO.STG_KPI_NEWCO_APRU_ACTUAL' ;
COMMIT;

/***
	Aggregate : Monthly Revenue ARPU : 8 KPIs (C, P, G, H, HH)
	
    PREPAID :
        B7R000102   Prepaid ARPU = ("B1R000100 Prepaid Revenue" / "B1S000600 Prepaid Active Caller 30D Rolling")
        DB7R000102  Prepaid ARPU : DTAC = ("DB1R000100 Prepaid Revenue : DTAC" / "DB1S000600 Prepaid Active Caller 30D Rolling : DTAC")
        TB7R000102  Prepaid ARPU : TMH = ("TB1R000100 Prepaid Revenue : TMH" / "TB1S000600	Prepaid Active Caller 30D Rolling : TMH")
        
    POSTPAID :
        B7R010101   Postpaid ARPU B2C = ("B2R010100 Postpaid Revenue B2C" / "B2S010600 Postpaid Reported SubBase B2C")
        DB7R010101  Postpaid ARPU B2C : DTAC = ("DB2R010100 Postpaid Revenue B2C : DTAC" / "DB2S010600 Postpaid Reported SubBase B2C : DTAC")
        TB7R010101  Postpaid ARPU B2C : TMH = ("TB2R010100 Postpaid Revenue B2C : TMH" / "TB2S010600 Postpaid Reported SubBase B2C : TMH")
        
    TOL :
        TB7R000103  TOL ARPU = ("TB3R000100 TOL Revenue" / "TB3S000600 FTTx Reported SubBase")
        
    TVS :
    	TB7R000104  TVS ARPU = ("TB4R000100 TVS Revenue" / "TB4S000500 TVS Active Subs")
***/
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------


/** Aggregate Sctips ***/


INSERT /*+ APPEND */ INTO GEOSPCAPPO.STG_KPI_NEWCO_APRU_ACTUAL
     (TM_KEY_DAY, METRIC_CD, METRIC_NAME, ACTUAL, COMP_CD, VERSION, AREA_CD, AREA_DESC, AREA_TYPE, LOAD_DATE, REMARK)

SELECT /*+ parallel(4) */ TM_KEY_DAY, METRIC_CD, METRIC_NAME
    , CASE WHEN COALESCE(DENOMINATOR,0) <> 0 THEN (NUMERATOR / DENOMINATOR) END METRIC_VALUE -->> Calculation
    , COMP_CD, VERSION, AREA_CD, AREA_NAME, AREA_TYPE, CURRENT_DATE AS LOAD_DATE, REMARK
FROM ( 
	-->> B7R000102 Prepaid ARPU = ("B1R000100 Prepaid Revenue" / "B1S000600 Prepaid Active Caller 30D Rolling")
	SELECT TM_KEY_DAY, 'B7R000102' AS METRIC_CD, 'Prepaid ARPU' AS METRIC_NAME, 'ALL' AS COMP_CD, 'A' AS VERSION
		, AREA_TYPE, AREA_CD, AREA_NAME
		, '"B1R000100 Prepaid Revenue(30 Day)" / "B1S000600 Prepaid Active Caller 30D Rolling"' AS REMARK
		, COALESCE(SUM(REV_ROLLING_30D), LAG(SUM(REV_ROLLING_30D)) IGNORE NULLS OVER(PARTITION BY AREA_CD ORDER BY TM_KEY_DAY)) AS NUMERATOR
		, SUM(SUBS) DENOMINATOR
		, MAX(CURR_REV_DAY) CURR_REV_DAY
	FROM (
		SELECT TM_KEY_DAY, METRIC_CD, METRIC_NAME, AREA_TYPE, AREA_CD, AREA_NAME
			, CASE 	WHEN METRIC_CD = 'B1R000100' THEN MAX(ACTUAL_AS_OF) OVER(PARTITION BY METRIC_CD) END CURR_REV_DAY
			, CASE 	WHEN METRIC_CD = 'B1R000100' AND ACTUAL_SNAP IS NOT NULL
					THEN SUM(ACTUAL_SNAP) OVER(PARTITION BY METRIC_CD, AREA_CD ORDER BY TO_DATE(TM_KEY_DAY, 'YYYYMMDD') RANGE BETWEEN INTERVAL '29' DAY PRECEDING AND CURRENT ROW) 
					END REV_ROLLING_30D
			, CASE 	WHEN METRIC_CD = 'B1S000600' THEN ACTUAL_AGG_MTH END SUBS
		FROM GEOSPCAPPO.AGG_PERF_NEWCO 
		WHERE METRIC_CD IN ('B1R000100', 'B1S000600')
		AND AREA_TYPE NOT IN ('CCAA' , 'CCAATT')
		AND TM_KEY_DAY >= V_SNAP_TM_KEY
	) PREP_PREPAID_REV_ARPU
	GROUP BY TM_KEY_DAY, AREA_TYPE, AREA_CD, AREA_NAME
) PREPAID_REV_ARPU
WHERE TM_KEY_DAY >= 20250101 -->> Start calculating from the year 2025 
AND TM_KEY_DAY <= CURR_REV_DAY
;

COMMIT;


INSERT /*+ APPEND */ INTO GEOSPCAPPO.STG_KPI_NEWCO_APRU_ACTUAL
     (TM_KEY_DAY, METRIC_CD, METRIC_NAME, ACTUAL, COMP_CD, VERSION, AREA_CD, AREA_DESC, AREA_TYPE, LOAD_DATE, REMARK)

SELECT /*+ parallel(4) */ TM_KEY_DAY, METRIC_CD, METRIC_NAME
    , CASE WHEN COALESCE(DENOMINATOR,0) <> 0 THEN (NUMERATOR / DENOMINATOR) END METRIC_VALUE -->> Calculation
    , COMP_CD, VERSION, AREA_CD, AREA_NAME, AREA_TYPE, CURRENT_DATE AS LOAD_DATE, REMARK    
FROM ( 
	-->> DB7R000102 Prepaid ARPU : DTAC = ("DB1R000100 Prepaid Revenue : DTAC" / "DB1S000600 Prepaid Active Caller 30D Rolling : DTAC")
	SELECT TM_KEY_DAY, 'DB7R000102' AS METRIC_CD, 'Prepaid ARPU : DTAC' AS METRIC_NAME, 'DTAC' AS COMP_CD, 'A' AS VERSION
		, AREA_TYPE, AREA_CD, AREA_NAME
		, '"DB1R000100 Prepaid Revenue : DTAC(30 Day)" / "DB1S000600 Prepaid Active Caller 30D Rolling : DTAC"' AS REMARK
		, COALESCE(SUM(REV_ROLLING_30D), LAG(SUM(REV_ROLLING_30D)) IGNORE NULLS OVER(PARTITION BY AREA_CD ORDER BY TM_KEY_DAY)) AS NUMERATOR
		, SUM(SUBS) DENOMINATOR
		, MAX(CURR_REV_DAY) CURR_REV_DAY
	FROM (
		SELECT TM_KEY_DAY, METRIC_CD, METRIC_NAME, AREA_TYPE, AREA_CD, AREA_NAME
			, CASE 	WHEN METRIC_CD = 'DB1R000100' THEN MAX(ACTUAL_AS_OF) OVER(PARTITION BY METRIC_CD) END CURR_REV_DAY
			, CASE 	WHEN METRIC_CD = 'DB1R000100' AND ACTUAL_SNAP IS NOT NULL
					THEN SUM(ACTUAL_SNAP) OVER(PARTITION BY METRIC_CD, AREA_CD ORDER BY TO_DATE(TM_KEY_DAY, 'YYYYMMDD') RANGE BETWEEN INTERVAL '29' DAY PRECEDING AND CURRENT ROW) 
					END REV_ROLLING_30D
			, CASE 	WHEN METRIC_CD = 'DB1S000600' THEN ACTUAL_AGG_MTH END SUBS
		FROM GEOSPCAPPO.AGG_PERF_NEWCO 
		WHERE METRIC_CD IN ('DB1R000100', 'DB1S000600')
		AND AREA_TYPE NOT IN ('CCAA' , 'CCAATT')
		AND TM_KEY_DAY >= V_SNAP_TM_KEY
	) PREP_PREPAID_REV_ARPU_DTAC
	GROUP BY TM_KEY_DAY, AREA_TYPE, AREA_CD, AREA_NAME
) PREPAID_REV_ARPU_DTAC
WHERE TM_KEY_DAY >= 20250101 -->> Start calculating from the year 2025 
AND TM_KEY_DAY <= CURR_REV_DAY
;

COMMIT;


INSERT /*+ APPEND */ INTO GEOSPCAPPO.STG_KPI_NEWCO_APRU_ACTUAL
     (TM_KEY_DAY, METRIC_CD, METRIC_NAME, ACTUAL, COMP_CD, VERSION, AREA_CD, AREA_DESC, AREA_TYPE, LOAD_DATE, REMARK)

SELECT /*+ parallel(4) */ TM_KEY_DAY, METRIC_CD, METRIC_NAME
    , CASE WHEN COALESCE(DENOMINATOR,0) <> 0 THEN (NUMERATOR / DENOMINATOR) END METRIC_VALUE -->> Calculation
    , COMP_CD, VERSION, AREA_CD, AREA_NAME, AREA_TYPE, CURRENT_DATE AS LOAD_DATE, REMARK
FROM ( 
	-->> TB7R000102 Prepaid ARPU : TMH = ("TB1R000100 Prepaid Revenue : TMH" / "TB1S000600	Prepaid Active Caller 30D Rolling : TMH")
	SELECT TM_KEY_DAY, 'TB7R000102' AS METRIC_CD, 'Prepaid ARPU : TMH' AS METRIC_NAME, 'TRUE' AS COMP_CD, 'A' AS VERSION
		, AREA_TYPE, AREA_CD, AREA_NAME
		, '"TB1R000100 Prepaid Revenue : TMH(30 Day)" / "TB1S000600	Prepaid Active Caller 30D Rolling : TMH"' AS REMARK
		, COALESCE(SUM(REV_ROLLING_30D), LAG(SUM(REV_ROLLING_30D)) IGNORE NULLS OVER(PARTITION BY AREA_CD ORDER BY TM_KEY_DAY)) AS NUMERATOR
		, SUM(SUBS) DENOMINATOR
		, MAX(CURR_REV_DAY) CURR_REV_DAY
	FROM (
		SELECT TM_KEY_DAY, METRIC_CD, METRIC_NAME, AREA_TYPE, AREA_CD, AREA_NAME
			, CASE 	WHEN METRIC_CD = 'TB1R000100' THEN MAX(ACTUAL_AS_OF) OVER(PARTITION BY METRIC_CD) END CURR_REV_DAY
			, CASE 	WHEN METRIC_CD = 'TB1R000100' AND ACTUAL_SNAP IS NOT NULL
					THEN SUM(ACTUAL_SNAP) OVER(PARTITION BY METRIC_CD, AREA_CD ORDER BY TO_DATE(TM_KEY_DAY, 'YYYYMMDD') RANGE BETWEEN INTERVAL '29' DAY PRECEDING AND CURRENT ROW) 
					END REV_ROLLING_30D
			, CASE 	WHEN METRIC_CD = 'TB1S000600' THEN ACTUAL_AGG_MTH END SUBS
		FROM GEOSPCAPPO.AGG_PERF_NEWCO 
		WHERE METRIC_CD IN ('TB1R000100', 'TB1S000600')
		AND AREA_TYPE NOT IN ('CCAA' , 'CCAATT')
		AND TM_KEY_DAY >= V_SNAP_TM_KEY
	) PREP_PREPAID_REV_ARPU_TMH
	GROUP BY TM_KEY_DAY, AREA_TYPE, AREA_CD, AREA_NAME
) PREPAID_REV_ARPU_TMH
WHERE TM_KEY_DAY >= 20250101 -->> Start calculating from the year 2025 
AND TM_KEY_DAY <= CURR_REV_DAY
;

COMMIT;


INSERT /*+ APPEND */ INTO GEOSPCAPPO.STG_KPI_NEWCO_APRU_ACTUAL
     (TM_KEY_DAY, METRIC_CD, METRIC_NAME, ACTUAL, COMP_CD, VERSION, AREA_CD, AREA_DESC, AREA_TYPE, LOAD_DATE, REMARK)

SELECT /*+ parallel(4) */ TM_KEY_DAY, METRIC_CD, METRIC_NAME
    , CASE WHEN COALESCE(DENOMINATOR,0) <> 0 THEN (NUMERATOR / DENOMINATOR) END METRIC_VALUE -->> Calculation
    , COMP_CD, VERSION, AREA_CD, AREA_NAME, AREA_TYPE, CURRENT_DATE AS LOAD_DATE, REMARK    
FROM ( 
	-->> B7R010101 Postpaid ARPU B2C = ("B2R010100 Postpaid Revenue B2C" / "B2S010600 Postpaid Reported SubBase B2C")
	SELECT START_DAY, TM_KEY_DAY, 'B7R010101' AS METRIC_CD, 'Postpaid ARPU B2C' AS METRIC_NAME, 'ALL' AS COMP_CD, 'A' AS VERSION
		, AREA_TYPE, AREA_CD, AREA_NAME
		, '"B2R010100 Postpaid Revenue B2C(30 Day)" / "B2S010600 Postpaid Reported SubBase B2C"' AS REMARK
		, COALESCE(SUM(REV_MTH), LAG(SUM(REV_MTH)) IGNORE NULLS OVER(PARTITION BY AREA_CD ORDER BY TM_KEY_DAY)) AS NUMERATOR
		, SUM(SUBS) DENOMINATOR
		, MAX(CURR_REV_DAY) CURR_REV_DAY
	FROM (
		SELECT START_DAY, A.TM_KEY_DAY, A.METRIC_CD, A.METRIC_NAME, A.AREA_TYPE, A.AREA_CD, A.AREA_NAME, CURR_REV_DAY, SUBS
			, SUM(B.ACTUAL_SNAP) AS REV_MTH
		FROM (
			SELECT TM_KEY_DAY, METRIC_CD, METRIC_NAME, AREA_TYPE, AREA_CD, AREA_NAME
				, TO_CHAR(ADD_MONTHS(TO_DATE(TM_KEY_DAY,'YYYYMMDD'),-1)+1,'YYYYMMDD') AS START_DAY
				, CASE WHEN METRIC_CD = 'B2R010100' THEN MAX(ACTUAL_AS_OF) OVER(PARTITION BY METRIC_CD) END CURR_REV_DAY
				, CASE WHEN METRIC_CD = 'B2S010600' THEN ACTUAL_AGG_MTH END SUBS
			FROM GEOSPCAPPO.AGG_PERF_NEWCO 
			WHERE METRIC_CD IN ('B2R010100', 'B2S010600')
			AND AREA_TYPE NOT IN ('CCAA' , 'CCAATT')
			AND TM_KEY_DAY >= V_SNAP_TM_KEY
		) A
		LEFT JOIN GEOSPCAPPO.AGG_PERF_NEWCO B
			ON B.METRIC_CD = 'B2R010100'
			AND B.METRIC_CD = A.METRIC_CD
			AND B.AREA_CD = A.AREA_CD
			AND B.TM_KEY_DAY BETWEEN A.START_DAY AND A.TM_KEY_DAY
		GROUP BY A.TM_KEY_DAY, START_DAY, A.METRIC_CD, A.METRIC_NAME, A.AREA_TYPE, A.AREA_CD, A.AREA_NAME, CURR_REV_DAY, SUBS
	) PREP_POSTPAID_B2C_REV_ARPU
	GROUP BY START_DAY, TM_KEY_DAY, AREA_TYPE, AREA_CD, AREA_NAME
) POSTPAID_B2C_REV_ARPU
WHERE TM_KEY_DAY >= 20250101 -->> Start calculating from the year 2025 
AND TM_KEY_DAY <= CURR_REV_DAY
;

COMMIT;


INSERT /*+ APPEND */ INTO GEOSPCAPPO.STG_KPI_NEWCO_APRU_ACTUAL
     (TM_KEY_DAY, METRIC_CD, METRIC_NAME, ACTUAL, COMP_CD, VERSION, AREA_CD, AREA_DESC, AREA_TYPE, LOAD_DATE, REMARK)

SELECT /*+ parallel(4) */ TM_KEY_DAY, METRIC_CD, METRIC_NAME
    , CASE WHEN COALESCE(DENOMINATOR,0) <> 0 THEN (NUMERATOR / DENOMINATOR) END METRIC_VALUE -->> Calculation
    , COMP_CD, VERSION, AREA_CD, AREA_NAME, AREA_TYPE, CURRENT_DATE AS LOAD_DATE, REMARK
FROM ( 
	-->> DB7R010101 Postpaid ARPU B2C : DTAC = ("DB2R010100 Postpaid Revenue B2C : DTAC" / "DB2S010600 Postpaid Reported SubBase B2C : DTAC")
	SELECT START_DAY, TM_KEY_DAY, 'DB7R010101' AS METRIC_CD, 'Postpaid ARPU B2C : DTAC' AS METRIC_NAME, 'DTAC' AS COMP_CD, 'A' AS VERSION
		, AREA_TYPE, AREA_CD, AREA_NAME
		, '"DB2R010100 Postpaid Revenue B2C : DTAC(30 Day)" / "DB2S010600 Postpaid Reported SubBase B2C : DTAC"' AS REMARK
		, COALESCE(SUM(REV_MTH), LAG(SUM(REV_MTH)) IGNORE NULLS OVER(PARTITION BY AREA_CD ORDER BY TM_KEY_DAY)) AS NUMERATOR
		, SUM(SUBS) DENOMINATOR
		, MAX(CURR_REV_DAY) CURR_REV_DAY
	FROM (
		SELECT START_DAY, A.TM_KEY_DAY, A.METRIC_CD, A.METRIC_NAME, A.AREA_TYPE, A.AREA_CD, A.AREA_NAME, CURR_REV_DAY, SUBS
			, SUM(B.ACTUAL_SNAP) AS REV_MTH
		FROM (
			SELECT TM_KEY_DAY, METRIC_CD, METRIC_NAME, AREA_TYPE, AREA_CD, AREA_NAME
				, TO_CHAR(ADD_MONTHS(TO_DATE(TM_KEY_DAY,'YYYYMMDD'),-1)+1,'YYYYMMDD') AS START_DAY
				, CASE WHEN METRIC_CD = 'DB2R010100' THEN MAX(ACTUAL_AS_OF) OVER(PARTITION BY METRIC_CD) END CURR_REV_DAY
				, CASE WHEN METRIC_CD = 'DB2S010600' THEN ACTUAL_AGG_MTH END SUBS
			FROM GEOSPCAPPO.AGG_PERF_NEWCO 
			WHERE METRIC_CD IN ('DB2R010100', 'DB2S010600')
			AND AREA_TYPE NOT IN ('CCAA' , 'CCAATT')
			AND TM_KEY_DAY >= V_SNAP_TM_KEY
		) A
		LEFT JOIN GEOSPCAPPO.AGG_PERF_NEWCO B
			ON B.METRIC_CD = 'DB2R010100'
			AND B.METRIC_CD = A.METRIC_CD
			AND B.AREA_CD = A.AREA_CD
			AND B.TM_KEY_DAY BETWEEN A.START_DAY AND A.TM_KEY_DAY
		GROUP BY A.TM_KEY_DAY, START_DAY, A.METRIC_CD, A.METRIC_NAME, A.AREA_TYPE, A.AREA_CD, A.AREA_NAME, CURR_REV_DAY, SUBS
	) PREP_POSTPAID_B2C_REV_ARPU_DTAC
	GROUP BY START_DAY, TM_KEY_DAY, AREA_TYPE, AREA_CD, AREA_NAME
) POSTPAID_B2C_REV_ARPU_DTAC
WHERE TM_KEY_DAY >= 20250101 -->> Start calculating from the year 2025 
AND TM_KEY_DAY <= CURR_REV_DAY
;

COMMIT;


INSERT /*+ APPEND */ INTO GEOSPCAPPO.STG_KPI_NEWCO_APRU_ACTUAL
     (TM_KEY_DAY, METRIC_CD, METRIC_NAME, ACTUAL, COMP_CD, VERSION, AREA_CD, AREA_DESC, AREA_TYPE, LOAD_DATE, REMARK)

SELECT /*+ parallel(4) */ TM_KEY_DAY, METRIC_CD, METRIC_NAME
    , CASE WHEN COALESCE(DENOMINATOR,0) <> 0 THEN (NUMERATOR / DENOMINATOR) END METRIC_VALUE -->> Calculation
    , COMP_CD, VERSION, AREA_CD, AREA_NAME, AREA_TYPE, CURRENT_DATE AS LOAD_DATE, REMARK
FROM ( 
	-->> TB7R010101 Postpaid ARPU B2C : TMH = ("TB2R010100 Postpaid Revenue B2C : TMH" / "TB2S010600 Postpaid Reported SubBase B2C : TMH")
	SELECT START_DAY, TM_KEY_DAY, 'TB7R010101' AS METRIC_CD, 'Postpaid ARPU B2C : TMH' AS METRIC_NAME, 'TRUE' AS COMP_CD, 'A' AS VERSION
		, AREA_TYPE, AREA_CD, AREA_NAME
		, '"TB2R010100 Postpaid Revenue B2C : TMH(30 Day)" / "TB2S010600 Postpaid Reported SubBase B2C : TMH"' AS REMARK
		, COALESCE(SUM(REV_MTH), LAG(SUM(REV_MTH)) IGNORE NULLS OVER(PARTITION BY AREA_CD ORDER BY TM_KEY_DAY)) AS NUMERATOR
		, SUM(SUBS) DENOMINATOR
		, MAX(CURR_REV_DAY) CURR_REV_DAY
	FROM (
		SELECT START_DAY, A.TM_KEY_DAY, A.METRIC_CD, A.METRIC_NAME, A.AREA_TYPE, A.AREA_CD, A.AREA_NAME, CURR_REV_DAY, SUBS
			, SUM(B.ACTUAL_SNAP) AS REV_MTH
		FROM (
			SELECT TM_KEY_DAY, METRIC_CD, METRIC_NAME, AREA_TYPE, AREA_CD, AREA_NAME
				, TO_CHAR(ADD_MONTHS(TO_DATE(TM_KEY_DAY,'YYYYMMDD'),-1)+1,'YYYYMMDD') AS START_DAY
				, CASE WHEN METRIC_CD = 'TB2R010100' THEN MAX(ACTUAL_AS_OF) OVER(PARTITION BY METRIC_CD) END CURR_REV_DAY
				, CASE WHEN METRIC_CD = 'TB2S010600' THEN ACTUAL_AGG_MTH END SUBS
			FROM GEOSPCAPPO.AGG_PERF_NEWCO 
			WHERE METRIC_CD IN ('TB2R010100', 'TB2S010600')
			AND AREA_TYPE NOT IN ('CCAA' , 'CCAATT')
			AND TM_KEY_DAY >= V_SNAP_TM_KEY
		) A
		LEFT JOIN GEOSPCAPPO.AGG_PERF_NEWCO B
			ON B.METRIC_CD = 'TB2R010100'
			AND B.METRIC_CD = A.METRIC_CD
			AND B.AREA_CD = A.AREA_CD
			AND B.TM_KEY_DAY BETWEEN A.START_DAY AND A.TM_KEY_DAY
		GROUP BY A.TM_KEY_DAY, START_DAY, A.METRIC_CD, A.METRIC_NAME, A.AREA_TYPE, A.AREA_CD, A.AREA_NAME, CURR_REV_DAY, SUBS
	) PREP_POSTPAID_B2C_REV_ARPU_TMH
	GROUP BY START_DAY, TM_KEY_DAY, AREA_TYPE, AREA_CD, AREA_NAME
) POSTPAID_B2C_REV_ARPU_TMH
WHERE TM_KEY_DAY >= 20250101 -->> Start calculating from the year 2025 
AND TM_KEY_DAY <= CURR_REV_DAY
;

COMMIT;


INSERT /*+ APPEND */ INTO GEOSPCAPPO.STG_KPI_NEWCO_APRU_ACTUAL
     (TM_KEY_DAY, METRIC_CD, METRIC_NAME, ACTUAL, COMP_CD, VERSION, AREA_CD, AREA_DESC, AREA_TYPE, LOAD_DATE, REMARK)

SELECT /*+ parallel(4) */ TM_KEY_DAY, METRIC_CD, METRIC_NAME
    , CASE WHEN COALESCE(DENOMINATOR,0) <> 0 THEN (NUMERATOR / DENOMINATOR) END METRIC_VALUE -->> Calculation
    , COMP_CD, VERSION, AREA_CD, AREA_NAME, AREA_TYPE, CURRENT_DATE AS LOAD_DATE, REMARK
FROM ( 
	-->> TB7R000103 TOL ARPU = ("TB3R000100 TOL Revenue" / "TB3S000600 FTTx Reported SubBase")
	SELECT START_DAY, TM_KEY_DAY, 'TB7R000103' AS METRIC_CD, 'TOL ARPU' AS METRIC_NAME, 'TRUE' AS COMP_CD, 'A' AS VERSION
		, AREA_TYPE, AREA_CD, AREA_NAME
		, '"TB3R000100 TOL Revenue(30 Day)" / "TB3S000600 FTTx Reported SubBase"' AS REMARK
		, COALESCE(SUM(REV_MTH), LAG(SUM(REV_MTH)) IGNORE NULLS OVER(PARTITION BY AREA_CD ORDER BY TM_KEY_DAY)) AS NUMERATOR
		, SUM(SUBS) DENOMINATOR
		, MAX(CURR_REV_DAY) CURR_REV_DAY
	FROM (
		SELECT START_DAY, A.TM_KEY_DAY, A.METRIC_CD, A.METRIC_NAME, A.AREA_TYPE, A.AREA_CD, A.AREA_NAME, CURR_REV_DAY, SUBS
			, SUM(B.ACTUAL_SNAP) AS REV_MTH
		FROM (
			SELECT TM_KEY_DAY, METRIC_CD, METRIC_NAME, AREA_TYPE, AREA_CD, AREA_NAME
				, TO_CHAR(ADD_MONTHS(TO_DATE(TM_KEY_DAY,'YYYYMMDD'),-1)+1,'YYYYMMDD') AS START_DAY
				, CASE WHEN METRIC_CD = 'TB3R000100' THEN MAX(ACTUAL_AS_OF) OVER(PARTITION BY METRIC_CD) END CURR_REV_DAY
				, CASE WHEN METRIC_CD = 'TB3S000600' THEN ACTUAL_AGG_MTH END SUBS
			FROM GEOSPCAPPO.AGG_PERF_NEWCO 
			WHERE METRIC_CD IN ('TB3R000100', 'TB3S000600')
			AND AREA_TYPE NOT IN ('CCAA' , 'CCAATT')
			AND TM_KEY_DAY >= V_SNAP_TM_KEY
		) A
		LEFT JOIN GEOSPCAPPO.AGG_PERF_NEWCO B
			ON B.METRIC_CD = 'TB3R000100'
			AND B.METRIC_CD = A.METRIC_CD
			AND B.AREA_CD = A.AREA_CD
			AND B.TM_KEY_DAY BETWEEN A.START_DAY AND A.TM_KEY_DAY
		GROUP BY A.TM_KEY_DAY, START_DAY, A.METRIC_CD, A.METRIC_NAME, A.AREA_TYPE, A.AREA_CD, A.AREA_NAME, CURR_REV_DAY, SUBS
	) PREP_TOL_REV_ARPU
	GROUP BY START_DAY, TM_KEY_DAY, AREA_TYPE, AREA_CD, AREA_NAME
) TOL_REV_ARPU
WHERE TM_KEY_DAY >= 20250101 -->> Start calculating from the year 2025 
AND TM_KEY_DAY <= CURR_REV_DAY
;

COMMIT;


INSERT /*+ APPEND */ INTO GEOSPCAPPO.STG_KPI_NEWCO_APRU_ACTUAL
     (TM_KEY_DAY, METRIC_CD, METRIC_NAME, ACTUAL, COMP_CD, VERSION, AREA_CD, AREA_DESC, AREA_TYPE, LOAD_DATE, REMARK)

SELECT /*+ parallel(4) */ TM_KEY_DAY, METRIC_CD, METRIC_NAME
    , CASE WHEN COALESCE(DENOMINATOR,0) <> 0 THEN (NUMERATOR / DENOMINATOR) END METRIC_VALUE -->> Calculation
    , COMP_CD, VERSION, AREA_CD, AREA_NAME, AREA_TYPE, CURRENT_DATE AS LOAD_DATE, REMARK
FROM ( 
	-->> TB7R000104 TVS ARPU = ("TB4R000100 TVS Revenue" / "TB4S000500 TVS Active Subs")
	SELECT START_DAY, TM_KEY_DAY, 'TB7R000104' AS METRIC_CD, 'TVS ARPU' AS METRIC_NAME, 'TRUE' AS COMP_CD, 'A' AS VERSION
		, AREA_TYPE, AREA_CD, AREA_NAME
		, '"TB4R000100 TVS Revenue(30 Day)" / "TB4S000500 TVS Active Subs"' AS REMARK
		, COALESCE(SUM(REV_MTH), LAG(SUM(REV_MTH)) IGNORE NULLS OVER(PARTITION BY AREA_CD ORDER BY TM_KEY_DAY)) AS NUMERATOR
		, SUM(SUBS) DENOMINATOR
		, MAX(CURR_REV_DAY) CURR_REV_DAY
	FROM (
		SELECT START_DAY, A.TM_KEY_DAY, A.METRIC_CD, A.METRIC_NAME, A.AREA_TYPE, A.AREA_CD, A.AREA_NAME, CURR_REV_DAY, SUBS
			, SUM(B.ACTUAL_SNAP) AS REV_MTH
		FROM (
			SELECT TM_KEY_DAY, METRIC_CD, METRIC_NAME, AREA_TYPE, AREA_CD, AREA_NAME
				, TO_CHAR(ADD_MONTHS(TO_DATE(TM_KEY_DAY,'YYYYMMDD'),-1)+1,'YYYYMMDD') AS START_DAY
				, CASE WHEN METRIC_CD = 'TB4R000100' THEN MAX(ACTUAL_AS_OF) OVER(PARTITION BY METRIC_CD) END CURR_REV_DAY
				, CASE WHEN METRIC_CD = 'TB4S000500' THEN ACTUAL_AGG_MTH END SUBS
			FROM GEOSPCAPPO.AGG_PERF_NEWCO 
			WHERE METRIC_CD IN ('TB4R000100', 'TB4S000500')
			AND AREA_TYPE NOT IN ('CCAA' , 'CCAATT')
			AND TM_KEY_DAY >= V_SNAP_TM_KEY
		) A
		LEFT JOIN GEOSPCAPPO.AGG_PERF_NEWCO B
			ON B.METRIC_CD = 'TB4R000100'
			AND B.METRIC_CD = A.METRIC_CD
			AND B.AREA_CD = A.AREA_CD
			AND B.TM_KEY_DAY BETWEEN A.START_DAY AND A.TM_KEY_DAY
		GROUP BY A.TM_KEY_DAY, START_DAY, A.METRIC_CD, A.METRIC_NAME, A.AREA_TYPE, A.AREA_CD, A.AREA_NAME, CURR_REV_DAY, SUBS
	) PREP_TVS_REV_ARPU
	GROUP BY START_DAY, TM_KEY_DAY, AREA_TYPE, AREA_CD, AREA_NAME
) TVS_REV_ARPU
WHERE TM_KEY_DAY >= 20250101 -->> Start calculating from the year 2025 
AND TM_KEY_DAY <= CURR_REV_DAY
;

COMMIT;


END PRC_STG_KPI_NEWCO_APRU ;
